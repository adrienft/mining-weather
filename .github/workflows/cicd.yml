name: CICD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Start application in background
        run: npm start &

      - name: Wait for application to initialize
        run: sleep 5

      - name: Run tests
        run: npm test

  docker_build_and_push:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.USERNAME }}/mining-weather:${{ github.event_name == 'release' && github.event.release.tag_name || github.sha }} .
          docker push ${{ secrets.USERNAME }}/mining-weather:${{ github.event_name == 'release' && github.event.release.tag_name || github.sha }}
